# -*- coding: utf-8 -*-
"""online _payment_fraud_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HK1xTHrNTlhTpxKhxvwNP4shRNRkUlwN
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount("/content/drive/")

path='/content/drive/MyDrive/dataset/fraud_detection.xlsx'
import pandas as pd
df=pd.read_excel(path)
print(df)

df.head(5)

df.head(9)

df.shape

df['type'].unique()

print(df.isnull().sum())

df.type.value_counts()

type1=df['type'].value_counts()

transaction=type1.index
quantity=type1.values

import plotly.express as px

import plotly.express as px
figure=px.pie(df, values=quantity, names=transaction, hole=0.5,
              title="DISTOR OF TRANSACTION TYPE")
figure.show()





df.replace(to_replace=['transfer','payment','cash_out'],value=[1,2,3],inplace=True)

df

type

df

correlation = df.corr()

correlation['isfraud'].sort_values(ascending=False)

df['type']=df['type'].map({"CASH_OUT":1, "PAYMENT":2,  "TRANSFER":3 })

df['isfraud']=df['isfraud'].map({0:"no fraud",1:"fraud"})
df.head(10)

#model

from sklearn.model_selection import train_test_split

import numpy as np
x = np.array(df[["type","amount","oldbalance","new_balance"]].astype(int))

y = np.array(df[['isfraud']])

from sklearn.tree import DecisionTreeClassifier

xtrain, xtest, ytrain, ytest=train_test_split(x,y,test_size=0.10, random_state=42)
model=DecisionTreeClassifier()
model.fit(xtrain, ytrain)
print(model.score(xtest,ytest))

#sklearn randomforest classifire sliently converts array to float32
#solve:
#we need to change

#prediction

features = np.array([[4,9000.0,9000,0.0]])
print(model.predict(features))

